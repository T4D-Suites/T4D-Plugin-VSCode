{
    "CDPATH": {
        "prefix": "CDPATH",
        "body": "CDPATH",
        "description": "A colon-separated list of directories used as a search path for the cd built-in command."
    },
    "HOME": {
        "prefix": "HOME",
        "body": "HOME",
        "description": "The current user's home directory; the default for the cd built-in. The value of this variable is also used by tilde expansion."
    },
    "IFS": {
        "prefix": "IFS",
        "body": "IFS",
        "description": "A list of characters that separate fields; used when the shell splits words as part of expansion."
    },
    "MAIL": {
        "prefix": "MAIL",
        "body": "MAIL",
        "description": "If this parameter is set to a file name and the MAILPATH variable is not set, Bash informs the user of the arrival of mail in the specified file."
    },
    "MAILPATH": {
        "prefix": "MAILPATH",
        "body": "MAILPATH",
        "description": "A colon-separated list of file names which the shell periodically checks for new mail."
    },
    "OPTARG": {
        "prefix": "OPTARG",
        "body": "OPTARG",
        "description": "The value of the last option argument processed by the getopts built-in."
    },
    "OPTIND": {
        "prefix": "OPTIND",
        "body": "OPTIND",
        "description": "The index of the last option argument processed by the getopts built-in."
    },
    "PATH": {
        "prefix": "PATH",
        "body": "PATH",
        "description": "A colon-separated list of directories in which the shell looks for commands."
    },
    "BASH_ENV": {
        "prefix": "BASH_ENV",
        "body": "BASH_ENV",
        "description": "If this variable is set when Bash is invoked to execute a shell script, its value is expanded and used as the name of a startup file to read before executing the script."
    },
    "BASH_VERSION": {
        "prefix": "BASH_VERSION",
        "body": "BASH_VERSION",
        "description": "The version number of the current instance of Bash."
    },
    "BASH_VERSINFO": {
        "prefix": "BASH_VERSINFO",
        "body": "BASH_VERSINFO",
        "description": "A read-only array variable whose members hold version information for this instance of Bash."
    },
    "COLUMNS": {
        "prefix": "COLUMNS",
        "body": "COLUMNS",
        "description": "Used by the select built-in to determine the terminal width when printing selection lists. Automatically set upon receipt of a SIGWINCH signal."
    },
    "COMP_CWORD": {
        "prefix": "COMP_CWORD",
        "body": "COMP_CWORD",
        "description": "An index into ${COMP_WORDS} of the word containing the current cursor position."
    },
    "COMP_LINE": {
        "prefix": "COMP_LINE",
        "body": "COMP_LINE",
        "description": "The current command line."
    },
    "COMP_POINT": {
        "prefix": "COMP_POINT",
        "body": "COMP_POINT",
        "description": "The index of the current cursor position relative to the beginning of the current command."
    },
    "COMP_WORDS": {
        "prefix": "COMP_WORDS",
        "body": "COMP_WORDS",
        "description": "An array variable consisting of the individual words in the current command line."
    },
    "COMPREPLY": {
        "prefix": "COMPREPLY",
        "body": "COMPREPLY",
        "description": "An array variable from which Bash reads the possible completions generated by a shell function invoked by the programmable completion facility."
    },
    "DIRSTACK": {
        "prefix": "DIRSTACK",
        "body": "DIRSTACK",
        "description": "An array variable containing the current contents of the directory stack."
    },
    "EUID": {
        "prefix": "EUID",
        "body": "EUID",
        "description": "The numeric effective user ID of the current user."
    },
    "FCEDIT": {
        "prefix": "FCEDIT",
        "body": "FCEDIT",
        "description": "The editor used as a default by the -e option to the fc built-in command."
    },
    "FIGNORE": {
        "prefix": "FIGNORE",
        "body": "FIGNORE",
        "description": "A colon-separated list of suffixes to ignore when performing file name completion."
    },
    "FUNCNAME": {
        "prefix": "FUNCNAME",
        "body": "FUNCNAME",
        "description": "The name of any currently-executing shell function."
    },
    "GLOBIGNORE": {
        "prefix": "GLOBIGNORE",
        "body": "GLOBIGNORE",
        "description": "A colon-separated list of patterns defining the set of file names to be ignored by file name expansion."
    },
    "GROUPS": {
        "prefix": "GROUPS",
        "body": "GROUPS",
        "description": "An array variable containing the list of groups of which the current user is a member."
    },
    "HISTCMD": {
        "prefix": "HISTCMD",
        "body": "HISTCMD",
        "description": "The history number, or index in the history list, of the current command."
    },
    "HISTCONTROL": {
        "prefix": "HISTCONTROL",
        "body": "HISTCONTROL",
        "description": "Defines whether a command is added to the history file."
    },
    "HISTFILE": {
        "prefix": "HISTFILE",
        "body": "HISTFILE",
        "description": "The name of the file to which the command history is saved. The default value is ~/.bash_history."
    },
    "HISTFILESIZE": {
        "prefix": "HISTFILESIZE",
        "body": "HISTFILESIZE",
        "description": "The maximum number of lines contained in the history file, defaults to 500."
    },
    "HISTIGNORE": {
        "prefix": "HISTIGNORE",
        "body": "HISTIGNORE",
        "description": "A colon-separated list of patterns used to decide which command lines should be saved in the history list."
    },
    "HISTSIZE": {
        "prefix": "HISTSIZE",
        "body": "HISTSIZE",
        "description": "The maximum number of commands to remember on the history list, default is 500."
    },
    "HOSTFILE": {
        "prefix": "HOSTFILE",
        "body": "HOSTFILE",
        "description": "Contains the name of a file in the same format as /etc/hosts that should be read when the shell needs to complete a hostname."
    },
    "HOSTNAME": {
        "prefix": "HOSTNAME",
        "body": "HOSTNAME",
        "description": "The name of the current host."
    },
    "PWD": {
        "prefix": "PWD",
        "body": "PWD",
        "description": "The current working directory as set by the cd built-in command."
    },
    "RANDOM": {
        "prefix": "RANDOM",
        "body": "RANDOM",
        "description": "Each time this parameter is referenced, a random integer between 0 and 32767 is generated. Assigning a value to this variable seeds the random number generator."
    },
    "REPLY": {
        "prefix": "REPLY",
        "body": "REPLY",
        "description": "The default variable for the read built-in."
    },
    "SECONDS": {
        "prefix": "SECONDS",
        "body": "SECONDS",
        "description": "This variable expands to the number of seconds since the shell was started."
    },
    "UID": {
        "prefix": "UID",
        "body": "UID",
        "description": "The numeric, real user ID of the current user."
    },
    "alias": {
        "prefix": "alias",
        "body": "alias",
        "description": "Shell builtin function 'alias'"
    },
    "bg": {
        "prefix": "bg",
        "body": "bg",
        "description": "Shell builtin function 'bg'"
    },
    "bind": {
        "prefix": "bind",
        "body": "bind",
        "description": "Shell builtin function 'bind'"
    },
    "break": {
        "prefix": "break",
        "body": "break",
        "description": "Shell builtin function 'break'"
    },
    "builtin": {
        "prefix": "builtin",
        "body": "builtin",
        "description": "Shell builtin function 'builtin'"
    },
    "caller": {
        "prefix": "caller",
        "body": "caller",
        "description": "Shell builtin function 'caller'"
    },
    "cd": {
        "prefix": "cd",
        "body": "cd",
        "description": "Shell builtin function 'cd'"
    },
    "command": {
        "prefix": "command",
        "body": "command",
        "description": "Shell builtin function 'command'"
    },
    "compgen": {
        "prefix": "compgen",
        "body": "compgen",
        "description": "Shell builtin function 'compgen'"
    },
    "complete": {
        "prefix": "complete",
        "body": "complete",
        "description": "Shell builtin function 'complete'"
    },
    "continue": {
        "prefix": "continue",
        "body": "continue",
        "description": "Shell builtin function 'continue'"
    },
    "declare": {
        "prefix": "declare",
        "body": "declare",
        "description": "Shell builtin function 'declare'"
    },
    "dirs": {
        "prefix": "dirs",
        "body": "dirs",
        "description": "Shell builtin function 'dirs'"
    },
    "disown": {
        "prefix": "disown",
        "body": "disown",
        "description": "Shell builtin function 'disown'"
    },
    "echo": {
        "prefix": "echo",
        "body": "echo",
        "description": "Shell builtin function 'echo'"
    },
    "enable": {
        "prefix": "enable",
        "body": "enable",
        "description": "Shell builtin function 'enable'"
    },
    "eval": {
        "prefix": "eval",
        "body": "eval",
        "description": "Shell builtin function 'eval'"
    },
    "exec": {
        "prefix": "exec",
        "body": "exec",
        "description": "Shell builtin function 'exec'"
    },
    "exit": {
        "prefix": "exit",
        "body": "exit",
        "description": "Shell builtin function 'exit'"
    },
    "export": {
        "prefix": "export",
        "body": "export",
        "description": "Shell builtin function 'export'"
    },
    "false": {
        "prefix": "false",
        "body": "false",
        "description": "Shell builtin function 'false'"
    },
    "fc": {
        "prefix": "fc",
        "body": "fc",
        "description": "Shell builtin function 'fc'"
    },
    "fg": {
        "prefix": "fg",
        "body": "fg",
        "description": "Shell builtin function 'fg'"
    },
    "getopts": {
        "prefix": "getopts",
        "body": "getopts",
        "description": "Shell builtin function 'getopts'"
    },
    "hash": {
        "prefix": "hash",
        "body": "hash",
        "description": "Shell builtin function 'hash'"
    },
    "help": {
        "prefix": "help",
        "body": "help",
        "description": "Shell builtin function 'help'"
    },
    "history": {
        "prefix": "history",
        "body": "history",
        "description": "Shell builtin function 'history'"
    },
    "jobs": {
        "prefix": "jobs",
        "body": "jobs",
        "description": "Shell builtin function 'jobs'"
    },
    "kill": {
        "prefix": "kill",
        "body": "kill",
        "description": "Shell builtin function 'kill'"
    },
    "let": {
        "prefix": "let",
        "body": "let",
        "description": "Shell builtin function 'let'"
    },
    "local": {
        "prefix": "local",
        "body": "local",
        "description": "Shell builtin function 'local'"
    },
    "logout": {
        "prefix": "logout",
        "body": "logout",
        "description": "Shell builtin function 'logout'"
    },
    "popd": {
        "prefix": "popd",
        "body": "popd",
        "description": "Shell builtin function 'popd'"
    },
    "printf": {
        "prefix": "printf",
        "body": "printf",
        "description": "Shell builtin function 'printf'"
    },
    "pushd": {
        "prefix": "pushd",
        "body": "pushd",
        "description": "Shell builtin function 'pushd'"
    },
    "pwd": {
        "prefix": "pwd",
        "body": "pwd",
        "description": "Shell builtin function 'pwd'"
    },
    "read": {
        "prefix": "read",
        "body": "read",
        "description": "Shell builtin function 'read'"
    },
    "readonly": {
        "prefix": "readonly",
        "body": "readonly",
        "description": "Shell builtin function 'readonly'"
    },
    "return": {
        "prefix": "return",
        "body": "return",
        "description": "Shell builtin function 'return'"
    },
    "set": {
        "prefix": "set",
        "body": "set",
        "description": "Shell builtin function 'set'"
    },
    "shift": {
        "prefix": "shift",
        "body": "shift",
        "description": "Shell builtin function 'shift'"
    },
    "shopt": {
        "prefix": "shopt",
        "body": "shopt",
        "description": "Shell builtin function 'shopt'"
    },
    "source": {
        "prefix": "source",
        "body": "source",
        "description": "Shell builtin function 'source'"
    },
    "suspend": {
        "prefix": "suspend",
        "body": "suspend",
        "description": "Shell builtin function 'suspend'"
    },
    "test": {
        "prefix": "test",
        "body": "test",
        "description": "Shell builtin function 'test'"
    },
    "times": {
        "prefix": "times",
        "body": "times",
        "description": "Shell builtin function 'times'"
    },
    "trap": {
        "prefix": "trap",
        "body": "trap",
        "description": "Shell builtin function 'trap'"
    },
    "true": {
        "prefix": "true",
        "body": "true",
        "description": "Shell builtin function 'true'"
    },
    "type": {
        "prefix": "type",
        "body": "type",
        "description": "Shell builtin function 'type'"
    },
    "typeset": {
        "prefix": "typeset",
        "body": "typeset",
        "description": "Shell builtin function 'typeset'"
    },
    "ulimit": {
        "prefix": "ulimit",
        "body": "ulimit",
        "description": "Shell builtin function 'ulimit'"
    },
    "umask": {
        "prefix": "umask",
        "body": "umask",
        "description": "Shell builtin function 'umask'"
    },
    "unalias": {
        "prefix": "unalias",
        "body": "unalias",
        "description": "Shell builtin function 'unalias'"
    },
    "unset": {
        "prefix": "unset",
        "body": "unset",
        "description": "Shell builtin function 'unset'"
    },
    "wait": {
        "prefix": "wait",
        "body": "wait",
        "description": "Shell builtin function 'wait'"
    }
}